apply plugin: "kotlin"

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.mygdx.game.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets");

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task dist(type: Jar) {
    //from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}




dist.dependsOn classes

apply plugin: 'javafx-gradle-plugin'

String osName = org.gradle.internal.os.OperatingSystem.current().getName();
String osVersion = org.gradle.internal.os.OperatingSystem.current().getVersion();
String os='unknown'
println "*** $osName $osVersion was detected."


if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
    os='linux'
    //       appName = 'RetroWarLinux'
} else if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    os='windows'
    println "DONT FORGET TO RUN WIN.BAT TO FIX DPI"
    //       appName = 'RetroWarWindows'
} else if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
    os='mac'
} else {
    // unknown OS.
}

jfx {
    // minimal requirement for jfxJar-task
    mainClass = 'com.mygdx.game.desktop.DesktopLauncher'
    appName = project.ext.appName
    verbose = true

    addPackagerJar = true
    nativeReleaseVersion = "$version"
    // minimal requirement for jfxNative-task
    vendor = 'Vendor'

    manifestAttributes = ['Implementation-Version': version]

    //  alternativePathToJarFile = 'build/libs/desktop-0.0.1.jar'

    bundler=os+'.app'

  //  bundler = 'ALL'

    copyAdditionalAppResourcesToJar = true
    //  additionalBundlerResources = '../android/assets/'
    additionalAppResources = '../core/assets/'

    bundleArguments = [
            systemWide: true
    ]
}

//apply plugin: "org.mini2Dx.butler"
//
//
//butler {
//    user = "electron"
//    game = "retrowar"
//    userVersion = version
//    alphaChannel = false
//
//    windows {
//        binDirectory = "desktop/build/jfx/native/RetroWar"
//    }
////        osx {
////            binDirectory = "desktop/build/macapp"
////        }
////        anyOs {
////            binDirectory = "build/anyos"
////            channel = "java"
////        }
//
//
//}

//task deleteMacApp(type: Delete) {
//    delete 'build/macapp'
//
//}
//
//task copyToMacApp(type: Copy) {
//    from 'build/jfx/native/RetroWar.app'
//    into 'build/macapp/RetroWar.app'
//}
//
//
//task copyToAnyOs(type: Copy) {
//    from 'build/jfx/app'
//    into 'build/anyos/app'
//}
//
//task copyToAnyOs2(type: Copy) {
//    from 'RetroWar'
//    into 'build/anyos/'
//}
//
//task copyNative(type: Copy) {
//    if(os.equals('mac')){
//        from 'build/jfx/native/RetroWar.app'
//        into 'native/mac/RetroWar.app'
//    }else{
//        from 'build/jfx/native/RetroWar'
//        into 'native/' + os
//    }
//}
//
//
//task copyMac(type: Copy) {
//    from 'build/jfx/native/RetroWar.app'
//    into 'native/mac/RetroWar.app'
//}
//
//copyNative.dependsOn jfxNative